local Main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local TextLabel2 = Instance.new("TextLabel")
local TextLabel3 = Instance.new("TextLabel")
local TextButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local UICorner2 = Instance.new("UICorner")
local UIPadding = Instance.new("UIPadding")

--Properties:

Main.Name = "Main"
Main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
Main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Main.DisplayOrder = 999999999

Frame.Parent = Main
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.BackgroundColor3 = Color3.fromRGB(30, 32, 34)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame.Size = UDim2.new(0.200000003, 0, 0.150000006, 0)
Frame.ZIndex = 999999999

TextLabel.Parent = Frame
TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.5, 0, 0.100000001, 0)
TextLabel.Size = UDim2.new(0.600000024, 0, 0.150000006, 0)
TextLabel.Font = Enum.Font.GothamBold
TextLabel.Text = "EGG Artifact Finder"
TextLabel.TextColor3 = Color3.fromRGB(232, 230, 227)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

TextLabel2.Parent = Frame
TextLabel2.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel2.BackgroundTransparency = 1.000
TextLabel2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel2.BorderSizePixel = 0
TextLabel2.Position = UDim2.new(0.5, 0, 0.27, 0)
TextLabel2.Size = UDim2.new(0.600000024, 0, 0.150000006, 0)
TextLabel2.Font = Enum.Font.GothamBold
TextLabel2.Text = "0 Artifact(s) Found."
TextLabel2.TextColor3 = Color3.fromRGB(170, 0, 0)
TextLabel2.TextScaled = true
TextLabel2.TextSize = 14.000
TextLabel2.TextWrapped = true

TextLabel3.Parent = Frame
TextLabel3.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel3.BackgroundTransparency = 1.000
TextLabel3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel3.BorderSizePixel = 0
TextLabel3.Position = UDim2.new(0.5, 0, 1.1, 0)
TextLabel3.Size = UDim2.new(0.95, 0, 0.2, 0)
TextLabel3.Font = Enum.Font.GothamBold
TextLabel3.Text = "Hello, this is where the debug stuff goes."
TextLabel3.TextColor3 = Color3.fromRGB(232, 230, 227)
TextLabel3.TextScaled = true
TextLabel3.TextSize = 14.000
TextLabel3.TextWrapped = true

TextButton.Parent = Frame
TextButton.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.5, 0, 0.65, 0)
TextButton.Size = UDim2.new(0.800000012, 0, 0.5, 0)
TextButton.Font = Enum.Font.GothamBold
TextButton.Text = "Goto Next"
TextButton.TextColor3 = Color3.fromRGB(232, 230, 227)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true
local lastTeleportPosition = nil

TextButton.MouseButton1Click:Connect(function()
    -- Find the Player and Workspace
    local player = game.Players.LocalPlayer
    local workspace = game.Workspace

    -- Function to teleport player to a specific part with animation
    local function teleportToPartWithAnimation(part)
        local character = player.Character
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

        if not humanoidRootPart then
            return
        end

        -- Check if the destination is the same as the last teleport
        if lastTeleportPosition and part.Position == lastTeleportPosition then
            print("Skipping the same artifact.")
            TextLabel3.Text = "[DEBUG]: Skipping the same artifact."
            TextLabel3.TextColor3 = Color3.fromRGB(232, 230, 227)
            return false -- Indicate that the teleport was skipped
        end

        -- Disable character parts from colliding
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") and not part:IsA("Part") then
                part.CanCollide = false
            end
        end

        local targetPosition = part.Position + Vector3.new(0, 8, 0) -- 8 studs above the artifact
        local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear)

        local tween = game.TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = CFrame.new(targetPosition)})
        tween:Play()

        -- Wait for the tween to finish
        tween.Completed:Wait(1)

        -- Enable character parts to collide again
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") and not part:IsA("Part") then
                part.CanCollide = true
            end
        end

        -- Update the lastTeleportPosition
        lastTeleportPosition = part.Position

        return true -- Indicate that the teleport was successful
    end

    -- Function to search for and teleport to "plastic" parts within models
    local function searchForPlasticParts(parent)
        for _, child in pairs(parent:GetChildren()) do
            if child:IsA("Model") and string.find(child.Name, "Artifact") then
                local plasticPart = child:FindFirstChild("Plastic")
                if plasticPart and plasticPart:IsA("BasePart") then
                    if teleportToPartWithAnimation(plasticPart) then
                        return true -- Teleport was successful
                    else
                        -- Teleport was skipped, continue searching for the next artifact
                    end
                end
            end
        end
        return false
    end

    -- Find the "MouseIgnore" folder in Workspace
    local mouseIgnore = workspace:FindFirstChild("MouseIgnore")

    if mouseIgnore then
        if not searchForPlasticParts(mouseIgnore) then
            print("No new artifacts found.")
            TextLabel3.Text = "[DEBUG]: No new artifacts found."
            TextLabel3.TextColor3 = Color3.fromRGB(232, 230, 227)
        end
    else
        print("The 'MouseIgnore' folder was not found in Workspace.")
        TextLabel3.Text = "[DEBUG]: The 'MouseIgnore' folder was not found in Workspace."
        TextLabel3.TextColor3 = Color3.fromRGB(255, 165, 0)
    end
end)


local Button = TextButton
Button.AutoButtonColor = false

-- Values
local Logs = false
local ScaleTextSize = 7
local TweenTime = 0.24
local Style = Enum.EasingStyle.Quad
local EnterDarkDegree = -10 / 255
local ClickDarkDegree = -20 / 255

-- Locals
local Default = TextButton.BackgroundColor3
local Tween = game:GetService("TweenService")
local Entered
local NewColor

-- Mouse Enter
Button.MouseEnter:Connect(function()
    Entered = true
    Tween:Create(Button, TweenInfo.new(TweenTime, Style, Enum.EasingDirection.Out), {

        BackgroundColor3 = Color3.new(Default.R - EnterDarkDegree, Default.G - EnterDarkDegree, Default.B - EnterDarkDegree),
    }):Play()
    if Logs then
        print("Enter " .. tostring(Color3.fromRGB(Default.R - EnterDarkDegree, Default.G - EnterDarkDegree, Default.B - EnterDarkDegree)))
        TextLabel3.Text = "[DEBUG]: Enter " .. tostring(Color3.fromRGB(Default.R - EnterDarkDegree, Default.G - EnterDarkDegree, Default.B - EnterDarkDegree))
        TextLabel3.TextColor3 = Color3.fromRGB(255, 165, 0)
    end
end)

Button.MouseLeave:Connect(function()
    Entered = false

    Tween:Create(Button, TweenInfo.new(TweenTime / 1.2, Style, Enum.EasingDirection.In), {

        BackgroundColor3 = Default,

    }):Play()
end)

Button.MouseButton1Down:Connect(function()
    Tween:Create(Button, TweenInfo.new(TweenTime / 1.8, Style, Enum.EasingDirection.Out), {

        BackgroundColor3 = Color3.new(Default.R - ClickDarkDegree, Default.G - ClickDarkDegree, Default.B - ClickDarkDegree),
    }):Play()
    if Logs then
        print("MouseButton1Up " .. tostring(Color3.fromRGB(Default.R - ClickDarkDegree, Default.G - ClickDarkDegree, Default.B - ClickDarkDegree)))
        TextLabel3.Text = "[DEBUG]: MouseButton1Up " .. tostring(Color3.fromRGB(Default.R - ClickDarkDegree, Default.G - ClickDarkDegree, Default.B - ClickDarkDegree))
        TextLabel3.TextColor3 = Color3.fromRGB(255, 165, 0)
    end
end)

Button.MouseButton1Up:Connect(function()
    if Entered == false then
        NewColor = Default
    elseif Entered == true then
        NewColor = Color3.new(Default.R - EnterDarkDegree, Default.G - EnterDarkDegree, Default.B - EnterDarkDegree)
    end
    Tween:Create(Button, TweenInfo.new(TweenTime / 1.2, Style, Enum.EasingDirection.In), {

        BackgroundColor3 = NewColor,

    }):Play()
end)

if Logs then
    print("UI BUTTON EFFECT LOADED!")
    TextLabel3.Text = "[DEBUG]: UI BUTTON EFFECT LOADED!"
    TextLabel3.TextColor3 = Color3.fromRGB(232, 230, 227)
end


UICorner.CornerRadius = UDim.new(0, 3)
UICorner.Parent = TextButton

UICorner2.CornerRadius = UDim.new(0, 3)
UICorner2.Parent = Frame

UIPadding.Parent = TextButton
UIPadding.PaddingBottom = UDim.new(0, 5)
UIPadding.PaddingLeft = UDim.new(0, 5)
UIPadding.PaddingRight = UDim.new(0, 5)
UIPadding.PaddingTop = UDim.new(0, 5)

-- Scripts:

local UserInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local gui = Frame
local dragging
local dragInput
local dragStart
local startPos

function Lerp(a, b, m)
    return a + (b - a) * m
end

local lastMousePos
local lastGoalPos
local DRAG_SPEED = 20

function Update(dt)
    if not startPos then return end
    if not dragging and lastGoalPos then
        gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
        return 
    end

    local delta = lastMousePos - UserInputService:GetMouseLocation()
    local xGoal = startPos.X.Offset - delta.X
    local yGoal = startPos.Y.Offset - delta.Y
    lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
    gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
end

gui.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = gui.Position
        lastMousePos = UserInputService:GetMouseLocation()

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

gui.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

runService.Heartbeat:Connect(Update)

local artifactCount = 0  -- Initialize artifact count to 0
-- Function to update TextLabel2 with artifact count and color
local function updateArtifactCount()
    TextLabel2.Text = artifactCount .. " Artifact(s) Found."

    if artifactCount == 0 then
        TextLabel2.TextColor3 = Color3.new(170, 0, 0)  -- Red when artifact count is 0
    else
        TextLabel2.TextColor3 = Color3.new(0, 170, 0)  -- Green when artifact count is not 0
    end
end
local mouseIgnore = workspace:FindFirstChild("MouseIgnore")
if mouseIgnore then
    -- Function to update the artifact count
    local function updateArtifactCount()
        local newCount = 0

        for _, artifactAmount in pairs(mouseIgnore:GetChildren()) do
            if string.sub(artifactAmount.Name, 1, 8) == "Artifact" then
                newCount = newCount + 1
            end
        end

        if newCount ~= artifactCount then
            artifactCount = newCount
            print("Number of models starting with 'Artifact': " .. artifactCount)
            TextLabel3.Text = "[DEBUG]: Number of models starting with 'Artifact': " .. artifactCount
            TextLabel3.TextColor3 = Color3.fromRGB(232, 230, 227)
            TextLabel2.Text = artifactCount .. " Artifact(s) Found."
            if artifactCount == 0 then
                TextLabel2.TextColor3 = Color3.new(170, 0, 0)  -- Red when artifact count is 0
            else
                TextLabel2.TextColor3 = Color3.new(0, 170, 0)  -- Green when artifact count is not 0
            end
        end
    end

    -- Run the update function periodically
    while true do
        updateArtifactCount()
        wait(1)  -- Adjust the interval as needed (1 second in this example)
    end
else
    print("The 'MouseIgnore' folder was not found in Workspace.")
    TextLabel3.Text = "[DEBUG]: The 'MouseIgnore' folder was not found in Workspace."
    TextLabel3.TextColor3 = Color3.fromRGB(255, 165, 0)
end
